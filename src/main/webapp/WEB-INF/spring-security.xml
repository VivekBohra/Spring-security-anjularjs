<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!-- enable use-expressions -->
       
    <global-method-security secured-annotations="enabled" />
    <http auto-config="true" use-expressions="true">
        <session-management session-fixation-protection= "none"/>
        <intercept-url pattern="/tasks/archive/**" access="hasRole('ROLE_ADMIN')" requires-channel="https" />
                
        <intercept-url pattern="/**" access="permitAll" requires-channel="https" />
        <intercept-url pattern="/welcome**" access="isAuthenticated()"   requires-channel="https" />
        <!-- access denied page -->
        <access-denied-handler error-page="/403" />
        <form-login 
            login-page="/login" 
            default-target-url="/welcome" 
            authentication-failure-url="/login?error" 
            username-parameter="username"
            password-parameter="password" />
        <logout logout-success-url="/login?logout"  />
                
        <csrf token-repository-ref="csrfTokenRepository"/>
        
        <port-mappings>
        <!-- Default ports -->
        <port-mapping http="45746" https="8181"/>
        <!-- Websphere default ports -->
        <port-mapping http="9080" https="9443"/>
        <!-- Tomcat default ports -->
        <port-mapping http="8080" https="8443"/>
        <!-- Jetty custom ports -->
        <port-mapping http="7777" https="7443"/>
    </port-mappings>
        <!-- enable csrf protection -->
		
    </http>
	 
    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
           <!-- <password-encoder ref="encoder" />-->
            <jdbc-user-service  data-source-ref="dataSource" 
                                           users-by-username-query=
					"select username,password, enabled from users where username=?"
                                           authorities-by-username-query=
					"select username, role from user_roles where username =?  " />
        </authentication-provider>
    </authentication-manager>
   
    <beans:bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
        <beans:property name="headerName" value="X-XSRF-TOKEN"/>
    </beans:bean>
</beans:beans>